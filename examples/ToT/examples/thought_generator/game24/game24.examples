1.
Input: 7 3 8 1
Output: {
    "llm_response": [
        "7 + 3 = 10 (left: 8 1 10)", 
        "7 - 3 = 4 (left: 8 1 4)", 
        "7 * 3 = 21 (left: 8 1 21)", 
        "7 + 4 = 11 (left: 8 1 11)", 
        "7 - 4 = 3 (left: 8 1 3)", 
        "7 * 4 = 28 (left: 8 1 28)", 
        "8 + 3 = 11 (left: 7 1 11)", 
        "8 - 3 = 5 (left: 7 1 5)", 
        "8 * 3 = 24 (left: 7 1 24)", 
        "8 + 1 = 9 (left: 7 3 9)", 
        "8 - 1 = 7 (left: 7 3 7)", 
        "8 * 1 = 8 (left: 7 3 8)", 
        "8 / 1 = 8 (left: 7 3 8)",
        "7 + 1 = 8 (left: 3 8 8)",
        "7 - 1 = 6 (left: 3 8 6)",
        "7 * 1 = 7 (left: 3 8 7)",
        "7 / 1 = 7 (left: 3 8 7)",
        "3 - 1 = 2 (left: 7 8 2)",
        "3 * 1 = 3 (left: 7 8 3)",
        "3 / 1 = 3 (left: 7 8 3)"
    ],
    "next_step_input": [
        "8 1 10",
        "8 1 4",
        "8 1 21",
        "8 1 11",
        "8 1 3",
        "8 1 28",
        "7 1 11",
        "7 1 5",
        "7 1 24",
        "7 3 9",
        "7 3 7",
        "7 3 8",
        "7 3 8",
        "3 8 8",
        "3 8 6",
        "3 8 7",
        "3 8 7",
        "7 8 2",
        "7 8 3",
        "7 8 3"
    ]
}

2. 
Input: 7 4 8
Output: {
    "llm_response": [
        "7 + 4 = 11 (left: 8 11)",
        "7 - 4 = 3 (left: 8 3)",
        "7 * 4 = 28 (left: 8 28)",
        "8 + 4 = 12 (left: 7 12)",
        "8 - 4 = 4 (left: 7 4)",
        "8 * 4 = 32 (left: 7 32)",
        "8 / 4 = 2 (left: 7 2)",
        "8 - 7 = 1 (left: 4 1)",
        "8 * 7 = 56 (left: 4 56)",
    ],
    "next_step_input": [
        "8 11",
        "8 3",
        "8 28",
        "7 12",
        "7 4",
        "7 32",
        "7 2",
        "4 1",
        "4 56"
    ]
}

3. 
Input: 8 3
Output: {
    "llm_response": [
        "8 + 3 = 11 (left: 11)",
        "8 - 3 = 5 (left: 5)",
        "8 * 3 = 24 (left: 24)",
    ],
    "next_step_input": [
        "11",
        "5",
        "24"
    ]
}

4.
Input: 4 2 3 4
Output: {
    "llm_response": [
        "4 + 2 = 6 (left: 3 4 6)",
        "4 - 2 = 2 (left: 3 4 2)",
        "4 * 2 = 8 (left: 3 4 8)",
        "4 / 2 = 2 (left: 3 4 2)",
        "4 + 3 = 7 (left: 2 4 7)",
        "4 - 3 = 1 (left: 2 4 1)",
        "4 * 3 = 12 (left: 2 4 12)",
        "2 + 3 = 5 (left: 4 5 5)",
        "3 - 2 = 1 (left: 4 2 1)",
        "3 * 2 = 6 (left: 4 2 6)",
    ],
    "next_step_input": [
        "3 4 6",
        "3 4 2",
        "3 4 8",
        "3 4 2",
        "2 4 7",
        "2 4 1",
        "2 4 12",
        "4 5 5",
        "4 2 1",
        "4 2 6"
    ]
}